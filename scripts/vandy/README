README

@org	Semesterly
@what	Vanderbilt Course Parser
@author	Michael N. Miller
@date	9/3/16
______________________________________________

TODO 
 - select Term to search
 - fix locations
 	--> need to be logged in
 	--> add parser for it
 - deal with "Ad Hoc Meeting Times"
 	--> ex: EMGT-7733, EMGT-7711
______________________________________________

LOGIN

	VU-Net ID: ***REMOVED***
	Pass: Gainz!23

	GET 

		https://login.mis.vanderbilt.edu/login?service=https%3A%2F%2Fwebapp.mis.vanderbilt.edu%2Fmore%2Fj_spring_cas_security_check

	That returns a response header:

		Set-Cookie:JSESSIONID=6Hj313_pgckJYt0YDpJREDgEb2KkKvN78IMBlx227eVyA2gVQbg7!-1096849288; path=/mis-cas; HttpOnly

	Now in the cookie jar you should be able to find this cookie!

	Now we have a session ID to use next

	With that we POST to 

		https://login.mis.vanderbilt.edu/mis-cas/login;jsessionid=6Hj313_pgckJYt0YDpJREDgEb2KkKvN78IMBlx227eVyA2gVQbg7!-1096849288?service=https%3A%2F%2Fwebapp.mis.vanderbilt.edu%2Fmore%2Fj_spring_cas_security_check

	That needs a form data header:
	
		username=***REMOVED***&password=***REMOVED***&lt=_c59609F2E-246F-20A6-A258-5599BE8D1C39_kBD984736-70E7-D979-4F8D-87CD64A8B152&_eventId=submit&submit=LOGIN

	This should log us in

______________________________________________

LOCATION

must be logged in within browser in order to request location information
______________________________________________

COURSE NUMBERING

> catalog number can have letters in it
	
	Ex: 1601L

> catalog number and class number are different

	Ex: 1601L & 3753
______________________________________________

AXLE Credit Category

> I am not sure what this is or if it is important?
______________________________________________

COURSE DESCRIPTION

> if it is empty then it will print "[0]"
______________________________________________

REQUIREMENTS

- requirements (pre, co, anti)
 	--> This is quite a bit harder than a regex parse
 	--> Not really necessary
______________________________________________

INSTRUCTORS

- primary intructors (what do multiple instructor look like)
	--> NOTE: primary instructor flag lost (but easy to get back)
	--> EXAMPLE 25914
_____________________________________________

COURSE SEARCH 

	URL:

		'https://webapp.mis.vanderbilt.edu/more/SearchClassesExecute!search.action'

	PAYLOAD OPTIONS:

		payload = {
			'searchCriteria.classStatusCodes':'O',
			'__checkbox_searchCriteria.classStatusCodes':'O',
			'searchCriteria.classStatusCodes':'W',
			'__checkbox_searchCriteria.classStatusCodes':'W',
			'searchCriteria.classStatusCodes':'C', # NOTE: shows closed classes
			'__checkbox_searchCriteria.classStatusCodes':'C',
			'__checkbox_searchCriteria.newClassesOnly':'false',
			'searchCriteria.title':'',
			'searchCriteria.catalogNumber':'',
			'searchCriteria.instructorName':'',
			'searchCriteria.meetingDaysOperation':'ANY',
			'searchCriteria.meetingDays.onMonday':'true',
			'__checkbox_searchCriteria.meetingDays.onMonday':'true',
			'searchCriteria.meetingDays.onTuesday':'true',
			'__checkbox_searchCriteria.meetingDays.onTuesday':'true',
			'searchCriteria.meetingDays.onWednesday':'true',
			'__checkbox_searchCriteria.meetingDays.onWednesday':'true',
			'searchCriteria.meetingDays.onThursday':'true',
			'__checkbox_searchCriteria.meetingDays.onThursday':'true',
			'searchCriteria.meetingDays.onFriday':'true',
			'__checkbox_searchCriteria.meetingDays.onFriday':'true',
			'searchCriteria.meetingDays.onSaturday':'true',
			'__checkbox_searchCriteria.meetingDays.onSaturday':'true',
			'searchCriteria.meetingDays.onSunday':'true',
			'__checkbox_searchCriteria.meetingDays.onSunday':'true',
			'searchCriteria.startsAfter':'',
			'searchCriteria.endsBefore':'',
			'searchCriteria.classNumber':'',
			'searchCriteria.units.min':'',
			'searchCriteria.units.max':''
		}

______________________________________________

OVER 300 COURSES IN DEPARTMENT

	This is dealt with but this is currently not an issue that the parser is seeing when going through all the courses at Vandy. Therefore, for the sake of readbility I have removed the code that can help in this scenario. Find it below at your conveniance.

		def parseByDay(self, courseSearchURL, payload):

		# NOTE: Assuming no department will offer over 300 courses on MWF and TTHSS, individually
		# FIXME -- dangerous assumption to make!

		sys.stderr.write("ERROR: DEALING WITH TOO MANY COURSES IN DEPARTMENT")

		self.unsetDaysInPayload(payload)

		# parse Monday
		payload.update({
			'searchCriteria.meetingDays.onMonday':'true',
			'__checkbox_searchCriteria.meetingDays.onMonday':'true',	
			'searchCriteria.meetingDays.onWednesday':'true',
			'__checkbox_searchCriteria.meetingDays.onWednesday':'true',
			'searchCriteria.meetingDays.onFriday':'true',
			'__checkbox_searchCriteria.meetingDays.onFriday':'true',	
		})

		html = self.get_html(courseSearchURL, payload)
		num = int(re.search("totalRecords: ([0-9]*),", html).group(1))

		if num < 300:
			self.parseSetOfCourses(html)
		else:
			sys.stderr.write("ERROR: too many course offerings in " + payload['searchCriteria.subjectAreaCodes'] + " to parse accurately")

		self.unsetDaysInPayload(payload)

		# parse Tuesday
		payload.update({
			'searchCriteria.meetingDays.onTuesday':'true',
			'__checkbox_searchCriteria.meetingDays.onTuesday':'true',	
			'searchCriteria.meetingDays.onThursday':'true',
			'__checkbox_searchCriteria.meetingDays.onThursday':'true',
			'searchCriteria.meetingDays.onSaturday':'true',
			'__checkbox_searchCriteria.meetingDays.onSaturday':'true',	
			'searchCriteria.meetingDays.onSunday':'true',
			'__checkbox_searchCriteria.meetingDays.onSunday':'true',
		})

		html = self.get_html(courseSearchURL, payload)
		num = int(re.search("totalRecords: ([0-9]*),", html).group(1))

		if num < 300:
			self.parseSetOfCourses(html)
		else:
			sys.stderr.write("ERROR: too many course offerings in " + payload['searchCriteria.subjectAreaCodes'] + " to parse accurately")

		self.removeDaysInPayload(payload)

	def unsetDaysInPayload(self, payload):
		payload.update({
			'searchCriteria.meetingDaysOperation':'ANY',
			'searchCriteria.meetingDays.onMonday':'false',
			'__checkbox_searchCriteria.meetingDays.onMonday':'false',
			'__checkbox_searchCriteria.meetingDays.onTuesday':'false',
			'searchCriteria.meetingDays.onWednesday':'false',
			'__checkbox_searchCriteria.meetingDays.onWednesday':'false',
			'searchCriteria.meetingDays.onThursday':'false',
			'__checkbox_searchCriteria.meetingDays.onThursday':'false',
			'searchCriteria.meetingDays.onFriday':'false',
			'__checkbox_searchCriteria.meetingDays.onFriday':'false',
			'searchCriteria.meetingDays.onSaturday':'false',
			'__checkbox_searchCriteria.meetingDays.onSaturday':'false',
			'searchCriteria.meetingDays.onSunday':'false',
			'__checkbox_searchCriteria.meetingDays.onSunday':'false',
		})

	def removeDaysInPayload(self, payload):
		payload.pop('searchCriteria.meetingDaysOperation', None)
		payload.pop('searchCriteria.meetingDays.onMonday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onMonday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onTuesday', None)
		payload.pop('searchCriteria.meetingDays.onWednesday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onWednesday', None)
		payload.pop('searchCriteria.meetingDays.onThursday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onThursday', None)
		payload.pop('searchCriteria.meetingDays.onFriday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onFriday', None)
		payload.pop('searchCriteria.meetingDays.onSaturday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onSaturday', None)
		payload.pop('searchCriteria.meetingDays.onSunday', None)
		payload.pop('__checkbox_searchCriteria.meetingDays.onSunday', None)

______________________________________________
